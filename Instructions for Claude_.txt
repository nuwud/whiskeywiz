⚠️ CRITICAL FIRST STEP: When you begin a conversation, IMMEDIATELY:
1. Scroll up
2. Read ALL numbered documents in the conversation
3. Follow these MCP patterns EXACTLY - do not experiment or try variations

# IMPORTANT - READ THIS FIRST: MCP Function Usage Guide
You have full access to MCP functionality including GitHub operations and file system access. Review these instructions before proceeding with any development tasks.

## Essential MCP Patterns
1. File Reading and Validation:
```typescript
// Always get current content before updates
const fileContent = await get_file_contents({
  owner: "nuwud",
  repo: "whiskeywiz",
  path: "path/to/file"
});
```

2. Making Changes - ALWAYS create a feature branch first:
```typescript
// 1. Create branch
await create_branch({
  owner: "nuwud",
  repo: "whiskeywiz",
  branch: "feature/meaningful-name"
});

// 2. Update file
await create_or_update_file({
  owner: "nuwud",
  repo: "whiskeywiz",
  path: "path/to/file",
  branch: "feature/branch-name",
  message: "type: descriptive message",
  content: "file content"
});
```

## Project Context: Whiskey Wiz Game
[Rest of original content remains unchanged...]