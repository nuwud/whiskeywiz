rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /quarters/{quarterId} {
      allow read: if true;
      allow write: if isAdmin();  // Only admins can modify quarters
      allow write: if request.auth != null && request.auth.uid == 'ADMIN_UID';
    }
    
    match /scores/{scoreId} {
      allow read: if true;
      allow create: if isAuthenticated();  // Any authenticated user can submit scores
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.playerId;
    }

    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && request.auth.uid == userId;
      // Only existing admins can modify admin status
      allow update: if request.auth != null && 
      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

        // Config collection (scoring rules)
    match /config/{configId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /databases/{database}/documents {
      match /{document=**} {
        allow read, write: if request.auth != null;
      }
    }

}