rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /gameProgress/{docId} {
      allow read, write: if request.auth != null;
    }

        // Users collection
        match /users/{userId} {
          allow read, write: if request.auth != null;
          allow update: if request.auth != null && 
            (request.auth.uid == userId || 
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
        }

    match /{document=**} {
      allow read: if true;
    }

    // Quarters collection
    match /quarters/{quarterId} {
      allow read: if true;
      allow write: if isAdmin();  // Only admins can modify quarters
    }
    
    // Scores collection
match /scores/{scoreId} {
  allow read: if true;
  // Allow guest users to create scores
  allow create: if request.auth != null || 
                request.resource.data.isGuest == true;
  // Only authenticated users can create scores
  allow write: if request.auth != null && 
                // Users can only write their own scores
              (request.auth.uid == resource.data.playerId || 
                get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
}

    // Config collection (scoring rules)
    match /config/{configId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Custom events collection (if needed)
    match /customEvents/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}