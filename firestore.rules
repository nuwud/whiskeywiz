rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Quarters collection
    match /quarters/{quarterId} {
      allow read: if true;
      allow write: if isAdmin();  // Only admins can modify quarters
    }
    
    // Scores collection
    match /scores/{scoreId} {
      allow read: if true;
      allow create: if isAuthenticated();
      // Allow users to update/delete their own scores, or admins for any score
      allow update, delete: if isAuthenticated() && 
        (request.auth.uid == resource.data.playerId || isAdmin());
    }

    // Users collection
    match /users/{userId} {
      // Users can read their own data, admins can read any user data
      allow read: if isAuthenticated() && 
        (request.auth.uid == userId || isAdmin());
      // Users can modify their own non-admin data
      allow write: if isAuthenticated() && 
        request.auth.uid == userId && 
        !('isAdmin' in request.resource.data);
      // Only admins can modify admin status
      allow update: if isAdmin();
    }

    // Config collection (scoring rules)
    match /config/{configId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Custom events collection (if needed)
    match /customEvents/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}