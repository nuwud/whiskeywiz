rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Scores collection - Enhanced rules
    match /scores/{scoreId} {
      // Allow reading all scores
      allow read: if true;
      
      // Create rules: 
      // - Authenticated users can create their own scores
      // - Guest scores can be created without authentication
      // - Prevent injection of malicious data
      allow create: if 
        (request.auth != null) || 
        (request.resource.data.keys().hasAll(['isGuest', 'sessionId']) && 
         request.resource.data.isGuest == true &&
         request.resource.data.sessionId is string &&
         request.resource.data.sessionId.size() > 0 &&
         request.resource.data.playerId is string);
      
      // Update rules:
      // - Only the original player or admin can modify the score
      // - Prevent modifying critical fields after creation
      allow update: if 
        isAuthenticated() && 
        (request.auth.uid == resource.data.playerId || isAdmin()) &&
        // Prevent changing critical fields
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['totalScore', 'quarterScores', 'updatedAt']);
    }

    // Existing rules for other collections remain the same
    match /analytics/{sessionId} {
      allow create: if true;  
      allow read: if isAuthenticated() &&
        (resource.data.userId == request.auth.uid || isAdmin());
      allow update: if isAuthenticated();
    }

    match /sessions/{sessionId} {
      allow create: if true;
      allow read: if isAuthenticated() &&
        (resource.data.userId == request.auth.uid || isAdmin());
      allow update: if isAuthenticated() &&
        (resource.data.userId == request.auth.uid || !resource.data.userId);
    }

    match /users/{userId} {
      allow read: if isAuthenticated() && 
        (request.auth.uid == userId || isAdmin());
      allow write: if isAuthenticated() && 
        (request.auth.uid == userId || isAdmin());
      
      match /sessions/{sessionId} {
        allow read: if isAuthenticated() && 
          (request.auth.uid == userId || isAdmin());
      }
    }
    
    match /gameProgress/{docId} {
      allow read, write: if isAuthenticated();
    }
    
    match /quarters/{quarterId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /config/{configId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /customEvents/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}